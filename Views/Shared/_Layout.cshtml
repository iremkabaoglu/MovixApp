@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - MovixApp</title>

    <!-- Bootstrap + Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">

    <!-- Uygulama stilleri -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body class="bg-dark text-light">
    <!-- NAVBAR -->
    <nav class="navbar navbar-expand-lg navbar-dark border-bottom border-danger" style="background:#0f0f0f;">
        <div class="container">
            <a class="navbar-brand text-danger fw-bold fs-3" asp-controller="Movies" asp-action="Index">Movix</a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                    aria-controls="navbarNav" aria-expanded="false" aria-label="Menüyü Aç/Kapat">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!-- Arama -->
            <form class="d-none d-lg-flex ms-3 me-auto position-relative"
                  method="get" asp-controller="Movies" asp-action="Search"
                  role="search" autocomplete="off">
                <input id="navSearch" name="q"
                       class="form-control form-control-sm bg-transparent text-light"
                       type="search" placeholder="Film ara..." aria-label="Ara" />
                <button class="btn btn-sm btn-outline-danger ms-2">Ara</button>

                <!-- Canlı öneri kutusu -->
                <div id="navSuggest"
                     class="position-absolute rounded shadow bg-dark border border-secondary mt-5 d-none"
                     style="z-index:1000; min-width: 260px; max-height: 360px; overflow:auto;">
                </div>
            </form>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto align-items-lg-center">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Movies" asp-action="Index">Anasayfa</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Movies" asp-action="Index">Filmler</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Blog" asp-action="Index">Haberler</a>
                    </li>

                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = await UserManager.GetUserAsync(User);
                        var username = user != null ? await UserManager.GetUserNameAsync(user) : "";
                        var shortName = !string.IsNullOrEmpty(username) && username.Contains("@")
                        ? username.Split('@')[0] : username;

                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-light d-flex align-items-center"
                               href="#" id="userMenu" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-person-circle me-1"></i>@shortName
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" asp-controller="Profile" asp-action="Index">Profil</a></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li>
                                    <form method="post" asp-area="Identity" asp-page="/Account/Logout"
                                          asp-route-returnUrl="@Url.Action("Index","Movies")">
                                        <button type="submit" class="dropdown-item">Çıkış Yap</button>
                                    </form>
                                </li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Giriş Yap</a></li>
                        <li class="nav-item"><a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Kayıt Ol</a></li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <!-- İÇERİK -->
    <main class="container py-4">
        @RenderBody()
    </main>

    <!-- FOOTER -->
    <footer class="py-3 border-top border-secondary" style="background:#0f0f0f;">
        <div class="container d-flex justify-content-between align-items-center small text-secondary">
            <span>&copy; @DateTime.Now.Year - MovixApp</span>
            <a class="link-light text-decoration-none" asp-controller="Home" asp-action="Privacy">Gizlilik</a>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Canlı öneri (opsiyonel) -->
    <script>
        (function () {
            const input = document.getElementById('navSearch');
            const box = document.getElementById('navSuggest');
            if (!input || !box) return;

            let timer = null;

            input.addEventListener('input', () => {
                const q = input.value.trim();
                clearTimeout(timer);

                if (q.length < 2) {
                    box.classList.add('d-none'); box.innerHTML = '';
                    return;
                }

                timer = setTimeout(async () => {
                    try {
                        const res = await fetch(`/api/search/suggest?q=${encodeURIComponent(q)}`);
                        const items = await res.json();

                        if (!items || items.length === 0) {
                            box.classList.add('d-none'); box.innerHTML = '';
                            return;
                        }

                        box.innerHTML = items.map(m => `
                            <a href="/Movies/Details/${m.id}"
                               class="d-flex align-items-center p-2 text-decoration-none text-light border-bottom border-secondary">
                                ${m.poster ? `<img src="${m.poster}" class="me-2 rounded" width="32" height="48" />` : ''}
                                <span>${m.title}</span>
                            </a>
                        `).join('');
                        box.classList.remove('d-none');
                    } catch {
                        box.classList.add('d-none'); box.innerHTML = '';
                    }
                }, 200);
            });

            // kutunun dışına tıklanınca kapat
            document.addEventListener('click', (e) => {
                if (!box.contains(e.target) && e.target !== input) {
                    box.classList.add('d-none');
                }
            });
        })();
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
